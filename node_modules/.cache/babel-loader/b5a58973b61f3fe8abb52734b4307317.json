{"ast":null,"code":"var _jsxFileName = \"/home/web/React-js-project/weather-react/src/App.js\";\nimport { useState } from \"react\";\nimport React from 'react';\nconst api = {\n  key: \"0b5e0cbceba8382df1ad9234da742ceb\",\n  base: \"http://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&APPID=${api.key}`) // fetch(`https://reqres.in/api/users?page=1`)\n      .then(res => res.json()).then(result => {\n        setWeather(result); // setQuery('');\n        // console.log(result); \n        // console.error(result); \n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"sunday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDay();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: typeof weather.main != \"undefined\" ? weather.main.temp - 273 > 16 ? 'app warm' : 'app' : 'app',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"search\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, dateBuilder(new Date()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, Math.round(weather.main.temp) - 273, \"\\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }\n  }, weather.weather[0].main))) : \"\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/web/React-js-project/weather-react/src/App.js"],"names":["useState","React","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","dateBuilder","d","months","days","day","getDay","date","month","getMonth","year","getFullYear","main","temp","e","target","value","name","sys","country","Date","Math","round"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,kCADK;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;;AAKA,SAASC,GAAT,GAAe;AAEb,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAqBP,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMU,MAAM,GAAGC,GAAG,IAAI;AACpB,QAAIA,GAAG,CAACR,GAAJ,KAAY,OAAhB,EAAwB;AACvBS,MAAAA,KAAK,CAAE,GAAEV,GAAG,CAACE,IAAK,aAAYE,KAAM,UAASJ,GAAG,CAACC,GAAI,EAAhD,CAAL,CACC;AADD,OAEEU,IAFF,CAEOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFd,EAGEF,IAHF,CAGOG,MAAM,IAAI;AACdP,QAAAA,UAAU,CAACO,MAAD,CAAV,CADc,CAEd;AACA;AACA;AAED,OATF;AAUA;AACF,GAbD;;AAeA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AAEzB,QAAIC,MAAM,GAAG,CAAC,SAAD,EAAW,UAAX,EAAsB,OAAtB,EAA8B,OAA9B,EAAsC,KAAtC,EAA4C,MAA5C,EAAmD,MAAnD,EAA0D,QAA1D,EAAmE,WAAnE,EAA+E,SAA/E,EAAyF,UAAzF,EAAoG,UAApG,CAAb;AACA,QAAIC,IAAI,GAAG,CAAC,QAAD,EAAU,QAAV,EAAmB,SAAnB,EAA6B,QAA7B,EAAsC,WAAtC,EAAkD,UAAlD,EAA6D,QAA7D,EAAsE,UAAtE,CAAX;AACA,QAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;AACA,QAAIC,IAAI,GAAGL,CAAC,CAACI,MAAF,EAAX;AACA,QAAIE,KAAK,GAAGL,MAAM,CAACD,CAAC,CAACO,QAAF,EAAD,CAAlB;AACA,QAAIC,IAAI,GAAGR,CAAC,CAACS,WAAF,EAAX;AAEA,WAAQ,GAAEN,GAAI,IAAGE,IAAK,IAAGC,KAAM,IAAGE,IAAK,EAAvC;AACD,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAG,OAAOlB,OAAO,CAACoB,IAAf,IAAuB,WAAxB,GAAyCpB,OAAO,CAACoB,IAAR,CAAaC,IAAb,GAAkB,GAAlB,GAAwB,EAAzB,GAA+B,UAA/B,GAA4C,KAApF,GAA6F,KAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AACA,IAAA,SAAS,EAAC,YADV;AAEA,IAAA,WAAW,EAAC,QAFZ;AAGA,IAAA,QAAQ,EAAGC,CAAC,IAAIvB,QAAQ,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHxB;AAIA,IAAA,KAAK,EAAE1B,KAJP;AAKA,IAAA,UAAU,EAAGI,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUI,OAAOF,OAAO,CAACoB,IAAf,IAAuB,WAAxB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BpB,OAAO,CAACyB,IAAnC,QAA2CzB,OAAO,CAAC0B,GAAR,CAAYC,OAAvD,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBlB,WAAW,CAAC,IAAImB,IAAJ,EAAD,CAAlC,CAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBC,IAAI,CAACC,KAAL,CAAW9B,OAAO,CAACoB,IAAR,CAAaC,IAAxB,IAA8B,GAArD,UADF,eAEG;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BrB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBoB,IAA7C,CAFH,CALF,CADD,GAWI,EArBP,CADF,CADF;AA2BD;;AAED,eAAevB,GAAf","sourcesContent":["import { useState } from \"react\";\nimport React from 'react';\n\nconst api = {\n  key :\"0b5e0cbceba8382df1ad9234da742ceb\",\n  base :\"http://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  \n  const [ query, setQuery] = useState('')\n   \n  const [weather, setWeather] = useState({})\n  const search = evt => {\n    if (evt.key === \"Enter\"){\n     fetch(`${api.base}weather?q=${query}&APPID=${api.key}`)\n      // fetch(`https://reqres.in/api/users?page=1`)\n      .then(res => res.json())\n      .then(result => {\n        setWeather(result);\n        // setQuery('');\n        // console.log(result); \n        // console.error(result); \n      \n      });\n    }\n  }\n    \n  const dateBuilder = (d) => {\n    \n    let months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\n    let days = [\"Sunday\",\"Monday\",\"Tuesday\",\"sunday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\n    let day = days[d.getDay()];\n    let date = d.getDay();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp-273 > 16 )? 'app warm' : 'app') : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input type=\"text\" \n          className=\"search-bar\"\n          placeholder=\"search\"\n          onChange={ e => setQuery(e.target.value)}\n          value={query} \n          onKeyPress= {search}\n          />\n        </div>\n        {(typeof weather.main != \"undefined\" ) ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">{Math.round(weather.main.temp)-273}&deg;C</div>\n               <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>\n        ) : (\"\")}\n      </main>\n    </div>    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}